---
- hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
    - vaultZZZZ.yml
  environment:
    CONTROLLER_HOST: "{{connection_aap.CONTROLLER_HOST}}"
    CONTROLLER_USERNAME: "{{connection_aap.CONTROLLER_USERNAME}}"
    CONTROLLER_PASSWORD: "{{connection_aap.CONTROLLER_PASSWORD}}"
    CONTROLLER_VERIFY_SSL: "{{connection_aap.CONTROLLER_VERIFY_SSL}}"
  tasks:

  - name: Get info job_template execute
    ansible.controller.export:
      validate_certs: no
      all: false
      job_templates: "{{tower_job_template_name}}"
    register: output_job_template_info

  - name: Incorrect name job_template
    vars:
      organization_name: "{{ output_job_template_info.assets.job_templates[0].natural_key.organization.name }}"
    ansible.builtin.fail:
      msg: "SECURE RULE VIOLATE::The name of job_template is not valid"
    when: awx_job_template_name != organization_name+" "+job_template_name

  - name: Get list job_template execute
    ansible.controller.export:
      validate_certs: no
      all: false
      job_templates: "{{steps_names[output_job_template_info.assets.job_templates[0].natural_key.organization.name+'_steps_names']}}"
    register: list_job_template_info

  - name: Incorrect names jobs templates
    ansible.builtin.fail:
      msg: "SECURE RULE VIOLATE::There was not exits names of jobs_templates in your organization, check if your job_templates names are correct"
    when: list_job_template_info.assets.job_templates|length != 3

  - name: Get info workflow_job execute
    ansible.controller.export:
      validate_certs: no
      all: false
      workflow_job_templates: "{{awx_workflow_job_name}}"
    register: output_workflow_info

  - name: Incorrect name Workflow
    vars:
      organization_name: "{{ output_job_template_info.assets.job_templates[0].natural_key.organization.name }}"
    ansible.builtin.fail:
      msg: "SECURE RULE VIOLATE::The name of workflow is not valid ::: '{{awx_workflow_job_name}}'"
    when: awx_workflow_job_name != organization_name+" Workflow Get Credentials OC"

  - name: Incorrect organization select in Workflow
    ansible.builtin.fail:
      msg: "SECURE RULE VIOLATE::Incorrect organization in the workflow"
    when:  output_workflow_info.assets.workflow_job_templates[0].organization is none or output_workflow_info.assets.workflow_job_templates[0].organization.name != output_job_template_info.assets.job_templates[0].natural_key.organization.name

  - name: Incorrect order job_templates in workflow
    set_fact:
      workflows_nodes: "{{ workflows_nodes | default([]) | combine ([ {item.unified_job_template.name : { 'success_nodes': item.related.success_nodes} }]) }}"
      jobtemplates_ids_workflow: "{{ jobtemplates_ids_workflow | default({}) | combine ({ item.identifier : { 'job_template_name': item.unified_job_template.name } }) }}"
    loop: "{{output_workflow_info.assets.workflow_job_templates[0].related.workflow_nodes}}"

  - name: Incorrect order job_templates in workflow
    set_fact:
      workflows_nodes_success: |
        {% for x in output_workflow_info.assets.workflow_job_templates[0].related.workflow_nodes %}
        {% for v in x.related.success_nodes %}
        - success_nodes_{{ x.unified_job_template.name}}_{{jobtemplates_ids_workflow[v.identifier].job_template_name}}
        {% endfor %}
        {% for v in x.related.failure_nodes %}
        - failure_nodes_{{ x.unified_job_template.name}}_{{jobtemplates_ids_workflow[v.identifier].job_template_name}}
        {% endfor %}
        {% for v in x.related.always_nodes %}
        - always_nodes_{{ x.unified_job_template.name}}_{{jobtemplates_ids_workflow[v.identifier].job_template_name}}
        {% endfor %}
        {% endfor %}

  - name: Incorrect order job_templates in workflow
    ansible.builtin.fail:
      msg: "SECURE RULE VIOLATE::Not the correct order of the job_template in the workflow, check names os jobtemplates and only used success transitions"
    when:  workflows_nodes_success|from_yaml | difference(steps_calls[output_job_template_info.assets.job_templates[0].natural_key.organization.name+'_steps_calls'])|length > 0 or steps_calls[output_job_template_info.assets.job_templates[0].natural_key.organization.name+'_steps_calls']| difference(workflows_nodes_success|from_yaml)|length > 0

  - name: Oki checks 0
    ansible.builtin.set_stats:
      data:
        checks_steps_V: "{{messages.checks.estructure}}"