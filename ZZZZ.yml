---
- hosts: localhost
  connection: local 
  gather_facts: no
  environment:
    CONTROLLER_HOST: https://192.168.0.150
    CONTROLLER_USERNAME: admin
    CONTROLLER_PASSWORD: redhat00
    CONTROLLER_VERIFY_SSL: False
  vars_files:
    - vault.yml
  tasks:

  - name: Get info job_template execute
    ansible.controller.export:
      validate_certs: no
      all: false
      job_templates: "{{tower_job_template_name}}"
    register: output_job_template_info

  - name: Get list job_template execute
    ansible.controller.export:
      validate_certs: no
      all: false
      job_templates: "{{steps[output_job_template_info.assets.job_templates[0].natural_key.organization.name+'_steps']}}"
    register: list_job_template_info  

  - name: Incorrect names jobs templates
    ansible.builtin.fail:
      msg: "There was not exits jobs_templates, what a genius"
    when: list_job_template_info.assets.job_templates|length != 3

  - name: Get info workflow_job execute
    ansible.controller.export:
      validate_certs: no
      all: false
      workflow_job_templates: "{{tower_workflow_job_name}}"
    register: output_workflow_info

  - name: Incorrect name Workflow
    ansible.builtin.fail:
      msg: "There was no better name for the workflow, what a genius ::: '{{tower_workflow_job_name}}'"
    when: tower_workflow_job_name != output_job_template_info.assets.job_templates[0].natural_key.organization.name+" Workflow to validate"

  - name: Incorrect organization select in Workflow
    ansible.builtin.fail:
      msg: "There was no better create workflow without organization, what a genius"
    when:  output_workflow_info.assets.workflow_job_templates[0].organization is none or output_workflow_info.assets.workflow_job_templates[0].organization.name != output_job_template_info.assets.job_templates[0].natural_key.organization.name
      
  - name: Incorrect order job_templates in workflow
    set_fact: 
      workflows_nodes: "{{ workflows_nodes | default([]) | combine ([ {item.unified_job_template.name : { 'success_nodes': item.related.success_nodes} }]) }}"
      jobtemplates_ids_workflow: "{{ jobtemplates_ids_workflow | default({}) | combine ({ item.identifier : { 'job_template_name': item.unified_job_template.name } }) }}"
    loop: "{{output_workflow_info.assets.workflow_job_templates[0].related.workflow_nodes}}"
      
  - name: Incorrect order job_templates in workflow
    set_fact: 
      workflows_nodes_success: |
        workflows_nodes_success:
        {% for x in output_workflow_info.assets.workflow_job_templates[0].related.workflow_nodes %}
            {% for v in x.related.success_nodes %}
              - '{{ x.unified_job_template.name }}_{{ jobtemplates_ids_workflow[v.identifier].job_template_name }}
            {% endfor %}
            {% for v in x.related.failure_nodes %}
              - '{{ x.unified_job_template.name }}_{{ jobtemplates_ids_workflow[v.identifier].job_template_name }}'
            {% endfor %}
            {% for v in x.related.always_nodes %}
              - '{{ x.unified_job_template.name }}_{{ jobtemplates_ids_workflow[v.identifier].job_template_name }}'
            {% endfor %}
        {% endfor %}
      
  - name: Incorrect order job_templates in workflow
    set_fact: 
      structure: "{{workflows_nodes_success|from_yaml}}"

  - debug: 
      msg: "{{workflows_nodes}}"

  - debug: 
      msg: "{{jobtemplates_ids_workflow}}"

  - debug: 
      msg: "{{workflows_nodes_success}}"

  - debug: 
      msg: "{{structure}}"

  - name: Oki checks 0
    ansible.builtin.set_stats:
      data:
        checks_steps0: true